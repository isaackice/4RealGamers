[{"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\index.js":"1","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\App.js":"2","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\Signup.js":"4","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\SingleThought.js":"5","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\Login.js":"6","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\Profile.js":"7","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\Home.js":"8","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\Header\\index.js":"9","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\Footer\\index.js":"10","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\utils\\mutations.js":"11","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\utils\\auth.js":"12","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\utils\\queries.js":"13","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\utils\\apiCall.js":"14","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\CommentList\\index.js":"15","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\ThoughtList\\index.js":"16","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\CommentForm\\index.js":"17","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\ThoughtForm\\index.js":"18","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\GameBox\\index.js":"19"},{"size":517,"mtime":1676314330274,"results":"20","hashOfConfig":"21"},{"size":2425,"mtime":1676314330266,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1676314330278,"results":"23","hashOfConfig":"21"},{"size":2750,"mtime":1676318135730,"results":"24","hashOfConfig":"21"},{"size":1620,"mtime":1676314330277,"results":"25","hashOfConfig":"21"},{"size":2594,"mtime":1676318135729,"results":"26","hashOfConfig":"21"},{"size":1790,"mtime":1676314330276,"results":"27","hashOfConfig":"21"},{"size":1452,"mtime":1676392278999,"results":"28","hashOfConfig":"21"},{"size":1369,"mtime":1676314330271,"results":"29","hashOfConfig":"21"},{"size":886,"mtime":1676318135727,"results":"30","hashOfConfig":"21"},{"size":1133,"mtime":1676314330280,"results":"31","hashOfConfig":"21"},{"size":1084,"mtime":1676314330280,"results":"32","hashOfConfig":"21"},{"size":968,"mtime":1676314330281,"results":"33","hashOfConfig":"21"},{"size":219,"mtime":1676392279000,"results":"34","hashOfConfig":"21"},{"size":989,"mtime":1676314330269,"results":"35","hashOfConfig":"21"},{"size":1556,"mtime":1676314330273,"results":"36","hashOfConfig":"21"},{"size":2498,"mtime":1676314330268,"results":"37","hashOfConfig":"21"},{"size":3193,"mtime":1676314330272,"results":"38","hashOfConfig":"21"},{"size":1390,"mtime":1676392328576,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"btj21c",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\index.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\App.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\Login.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\Profile.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\pages\\Home.js",["84","85"],"import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useState, useEffect } from 'react';\r\nimport ThoughtList from '../components/ThoughtList';\r\nimport ThoughtForm from '../components/ThoughtForm';\r\nimport search from '../utils/apiCall';\r\nimport GameBox from '../components/GameBox';\r\n\r\nimport { QUERY_THOUGHTS } from '../utils/queries';\r\n\r\n\r\n\r\n\r\nfunction Home(){\r\n  \r\n  \r\n  const [results, setResults] = useState([]);\r\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\r\n  const thoughts = data?.thoughts || [];\r\n  const callApi = async () => {\r\n    const response = await search();\r\n    const data = await response.data;\r\n    console.log(data);\r\n    setResults(data.results);\r\n  }\r\n\r\n  useEffect(() => {\r\n    callApi();\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <div\r\n          className=\"col-12 col-md-10 mb-3 p-3\"\r\n          style={{ border: '1px dotted #1a1a1a' }}\r\n        >\r\n          <ThoughtForm />\r\n        </div>\r\n        <div className=\"col-12 col-md-8 mb-3\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <>\r\n            \r\n            {/* <ThoughtList\r\n              thoughts={thoughts}\r\n              title=\"Some Feed for Thought(s)...\"/> */}\r\n              <GameBox games={results}/>\r\n\r\n              </>\r\n            \r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\Footer\\index.js",["86","87"],"import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      {/* <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n        <h4>\r\n          Made with{' '}\r\n          <span\r\n            className=\"emoji\"\r\n            role=\"img\"\r\n            aria-label=\"heart\"\r\n            aria-hidden=\"false\"\r\n          >\r\n            ❤️\r\n          </span>{' '}\r\n          by the Tech Thoughts team.\r\n        </h4>\r\n      </div> */}\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\utils\\auth.js",["88"],"import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\utils\\queries.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\utils\\apiCall.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\CommentForm\\index.js",["89"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst CommentForm = ({ thoughtId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: {\r\n          thoughtId,\r\n          commentText,\r\n          commentAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>What are your thoughts on this thought?</h4>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n            {error && <span className=\"ml-2\">{error.message}</span>}\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"commentText\"\r\n                placeholder=\"Add your comment...\"\r\n                value={commentText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Comment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\ThoughtForm\\index.js",["90"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_THOUGHT } from '../../utils/mutations';\r\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst ThoughtForm = () => {\r\n  const [thoughtText, setThoughtText] = useState('');\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\r\n    update(cache, { data: { addThought } }) {\r\n      try {\r\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_THOUGHTS,\r\n          data: { thoughts: [addThought, ...thoughts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addThought({\r\n        variables: {\r\n          thoughtText,\r\n          thoughtAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setThoughtText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'thoughtText' && value.length <= 280) {\r\n      setThoughtText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>What's on your techy mind?</h3>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"thoughtText\"\r\n                placeholder=\"Here's a new thought...\"\r\n                value={thoughtText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Thought\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtForm;\r\n","C:\\Users\\Owner\\desktop\\projects\\Game-Info-App\\client\\src\\components\\GameBox\\index.js",["91","92"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst GameBox = ({\r\n    games,\r\n}) => {\r\n    return (\r\n        <div>\r\n            {games &&\r\n                games.map((game) => (\r\n                    <div className=\"card mb-3\">\r\n                    \r\n                        <h4 className='card-header bg-primary text-light p-2 m-0'>\r\n                            {game.name}\r\n                        </h4>\r\n                        <div className=\"card-body\">\r\n                            <img className=\"card-img img-fluid\" src={game.background_image} alt=\"Card image\" ></img>\r\n                            <p className=\"card-text\">Rating: {game.rating}</p>\r\n                            <p className=\"card-text\">Release Date: {game.released}</p>\r\n                            <p className=\"card-text\">Playtime: {game.playtime}</p>\r\n                            <p className=\"card-text\">Metacritic: {game.metacritic}</p>\r\n                            <p className=\"card-text\">Platforms: {game.platforms.map((platform) => (\r\n                                <span key={platform.platform.id}>{platform.platform.name}, </span>\r\n                            ))}</p>\r\n                            \r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n                    \r\n        )\r\n                \r\n}\r\n\r\nexport default GameBox;",{"ruleId":"93","severity":1,"message":"94","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":19},{"ruleId":"93","severity":1,"message":"97","line":19,"column":9,"nodeType":"95","messageId":"96","endLine":19,"endColumn":17},{"ruleId":"93","severity":1,"message":"98","line":5,"column":9,"nodeType":"95","messageId":"96","endLine":5,"endColumn":17},{"ruleId":"93","severity":1,"message":"99","line":6,"column":9,"nodeType":"95","messageId":"96","endLine":6,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":41,"column":1,"nodeType":"102","endLine":41,"endColumn":34},{"ruleId":"93","severity":1,"message":"103","line":19,"column":15,"nodeType":"95","messageId":"96","endLine":19,"endColumn":19},{"ruleId":"93","severity":1,"message":"103","line":41,"column":15,"nodeType":"95","messageId":"96","endLine":41,"endColumn":19},{"ruleId":"93","severity":1,"message":"104","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":17,"column":29,"nodeType":"107","endLine":17,"endColumn":111},"no-unused-vars","'ThoughtList' is defined but never used.","Identifier","unusedVar","'thoughts' is assigned a value but never used.","'location' is assigned a value but never used.","'navigate' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'data' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]